<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.crypto2.aes</groupId>
	<artifactId>crypto2</artifactId>
	<version>0.9.5-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>crypto2 Tapestry 5 Application</name>


            




	<dependencies>
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-core</artifactId>
			<version>${tapestry-release-version}</version>
		</dependency>
		<!--
			A dependency on either JUnit or TestNG is required, or the surefire
			plugin (which runs the tests) will fail, preventing Maven from
			packaging the WAR. Tapestry includes a large number of testing
			facilities designed for use with TestNG (http://testng.org/), so it's
			recommended.
		-->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>5.8</version>
			<classifier>jdk15</classifier>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>2.4</version>
			<scope>test</scope>
		</dependency>

		<!--
			tapestry-test will conflict with RunJettyRun inside Eclipse.
			tapestry-test brings in Selenium, which is based on Jetty 5.1;
			RunJettyRun uses Jetty 6. <dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-test</artifactId>
			<version>${tapestry-release-version}</version> <scope>test</scope>
			</dependency>
		-->

		<!--
			Provided by the servlet container, but sometimes referenced in the
			application code.
		-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
			<version>2.5.5</version>
		</dependency>
		
		<!-- -->
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-hibernate</artifactId>
			<version>${tapestry-release-version}</version>
		</dependency>
		<!--
		<dependency>
        	<groupId>org.hibernate</groupId>
            <artifactId>hibernate</artifactId>
            <version>3.1.3</version>
        </dependency>
        -->
        <dependency>
      		<groupId>commons-collections</groupId>
      		<artifactId>commons-collections</artifactId>
      		<version>3.1</version>
    	</dependency>
		
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.7</version>
		</dependency>
		
		<dependency>
    		<groupId>org.beanshell</groupId>
    		<artifactId>bsh</artifactId>
    		<version>2.0b4</version>
		</dependency>
		
		<dependency>
			<groupId>org.openqa.selenium.client-drivers
			</groupId>
			<artifactId>selenium-java-client-driver
			</artifactId>
			<version>1.0-beta-1</version>
			<scope>test</scope>
		</dependency>

	</dependencies>
	<build>
		<finalName>crypto2</finalName>
		<plugins>
		
		
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<configuration>
					<scanIntervalSeconds>5</scanIntervalSeconds>
					<stopPort>9966</stopPort>
					<stopKey>foo</stopKey>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>8080</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<optimize>true</optimize>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId>
				<version>1.0-beta-3</version>
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start-server</goal>
						</goals>
						<configuration>
							<background>true</background>
							<logOutput>true</logOutput>
							<multiWindow>true</multiWindow>
						</configuration>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop-server</goal>
						</goals>
					</execution>
				</executions>
			</plugin>



 


 			
  			

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
      				<configuration>
      					<configuration>
                		<suiteXmlFiles>
        					<suiteXmlFile>src/test/resources/TestNG.xml</suiteXmlFile>
      					</suiteXmlFiles>
                		</configuration>
                    
                    	<skip>true</skip>
                	</configuration>
				
					<excludes>
						<exclude>**/integration/*Test.java</exclude>
						<exclude>**/components/*Test.java</exclude>
						<exclude>**/cryptotest/*Test.java</exclude>
						<exclude>**/entities/*Test.java</exclude>
						<exclude>**/services/*Test.java</exclude>
					</excludes>
				</configuration>
				<executions>
				
				    <execution>
                        <id>unit-tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                        
                            <skip>false</skip>
                            <excludes>
                                <exclude>**/*IntegrationTest.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
				
					<execution>
						<id>integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
						
						<systemProperties>
        					<property>
          					<name>SeleniumBrowser</name>
          					<value>*iehta</value>
        					</property>
      					</systemProperties>
						
						
							<excludes>
								<exclude>**/components/*Test.java</exclude>
								<exclude>**/cryptotest/*Test.java</exclude>
								<exclude>**/entities/*Test.java</exclude>
								<exclude>**/services/*Test.java</exclude>
							</excludes>
							<skip>false</skip>
							<includes>
								<include>**/integration/*Test.java
								</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
            
		</plugins>
	</build>

	<reporting>

		<!--
			Adds a report detailing the components, mixins and base classes
			defined by this module.
		-->
		<plugins>
			<plugin>
				<groupId>org.apache.tapestry</groupId>
				<artifactId>tapestry-component-report</artifactId>
				<version>${tapestry-release-version}</version>
				<configuration>
					<rootPackage>edu.crypto2</rootPackage>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<repositories>

		<!--
			This repository is only needed if the Tapestry released artifacts
			haven't made it to the central Maven repository yet.
		-->
		<repository>
			<id>tapestry</id>
			<url>http://tapestry.formos.com/maven-repository/</url>
		</repository>

		<!--
			This repository is only needed when the tapestry-release-version is a
			snapshot release.
		-->
		<repository>
			<id>tapestry-snapshots</id>
			<url>http://tapestry.formos.com/maven-snapshot-repository/</url>
		</repository>

		<repository>
			<id>codehaus.snapshots</id>
			<url>http://snapshots.repository.codehaus.org</url>
		</repository>
		<repository>
			<id>OpenQA_Release</id>
			<name>OpenQA Release Repository</name>
			<url>http://archiva.openqa.org/repository/releases/</url>
		</repository>
	</repositories>

	<pluginRepositories>

		<!--
			As above, this can be commented out when access to the snapshot
			version of a Tapestry Maven plugin is not required.
		-->
		<pluginRepository>
			<id>tapestry-snapshots</id>
			<url>http://tapestry.formos.com/maven-snapshot-repository/</url>
		</pluginRepository>


	</pluginRepositories>

	<properties>
		<tapestry-release-version>5.1.0.5</tapestry-release-version>
	</properties>
</project>
