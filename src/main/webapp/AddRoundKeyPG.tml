<html t:type="layout" case="preserve" title="AddRoundKey transformation"
      xmlns:t="http://tapestry.apache.org/schema/tapestry_5_1_0.xsd"
      xmlns:p="tapestry:parameter">
      
          <t:if test="loggedIn">
            You are logged as: ${UserName}. | <t:actionlink t:id="logOut" >Log out</t:actionlink>
            <p:else>
                Please, <t:pagelink page="Login">login</t:pagelink> or 
                <t:pagelink page="values/Register">register</t:pagelink>.
 				If you register, you will be able to change test vectors and meta transformations.
            </p:else>
        </t:if>  
      
	<div id="section" float="left" width="600">			
	${message:greeting}
		<t:zone t:id="viewZone"/>
		<p>		
		<t:block id="LinesOutDetails">

		<table border="0" width="80%" id="table1" align="left" style="font-family: courier, monospace; font-size:12px">
		<tr>
			<td width="60%">State buffer</td>
			<td width="40%"></td>
		</tr>
		<tr>
			<td width="60%">before AddRoundKey:</td>
			<td width="40%">After AddRoundKey:</td>
		</tr>
		<tr>
			<td>---------------</td>
			<td>---------------</td>
		</tr>
		<tr>
			<td>${detailLinesOut.line0_before}</td>
			<td>${detailLinesOut.line0}</td>
		</tr>
		<tr>
			<td>${detailLinesOut.line1_before}</td>
			<td>${detailLinesOut.line1}</td>
		</tr>
		<tr>
			<td>${detailLinesOut.line2_before}</td>
			<td>${detailLinesOut.line2}</td>
		</tr>
		<tr>
			<td>${detailLinesOut.line3_before}</td>
			<td>${detailLinesOut.line3}</td>
		</tr>
		<tr>
			<td>---------------</td>
			<td>---------------</td>
		</tr>
		</table>

		<br></br>
		</t:block>

		</p>
		
		<br></br>
		<br></br>
		<br></br>
		<br></br>
		<br></br>
		<br></br>
		<br></br>
		<br></br>
		
		<t:grid t:id="grid" source="TestValuesList" 
			include="AddRoundKey_TestValue, KeyExpansion_TestValue" 
			t:add="view" rowsPerPage="3"
			empty="block:valueNotFound" row="TestValues">
        	<t:parameter name="viewCell">
				<t:actionlink t:id="view" zone="viewZone" context="TestValues.id">View transformation</t:actionlink>
        	</t:parameter>
		</t:grid>
		<t:block id="valueNotFound">No Values Found</t:block>
		<br/>
		



	</div>
	
        <p>
        
    This transformation takes two input vectors as parameters. One of them is fragment of AES key, 
    which will be mixed with second parameter - which is basically State buffer that holds sub-results 
    from other transformations.<p></p>
    AES algorithm cyclic algorithm, and it is composed from (10+1), (12+1) or (14+1) rounds, depending on the key size.
    In each round, State buffer goes through specific transformations, and in each round we mix State buffer 
    with 16 bytes of expanded key.<p></p>
    So, AddRoundKey just adds, using XOR operation, current key fragment to the State, as follows:<p></p>
    State[i][j] = State[i][j] ^ key[key_index + 4*i + j];<p></p>
       
	And as before, just click on View transformation link in any grid row to see this transformation in action.
	Transformation will take test vectors from grid, and give you results on the top of page.<p></p> 

	If you are still confused, go to <t:pagelink page="QuickStartPG">Quick start page</t:pagelink><br></br>
	Now, you can go further, to create your own <t:pagelink page="values/CreateTestValues">test vectors</t:pagelink> or<br></br>
	to try some predefined <t:pagelink page="MetaTransformationPG">meta transformations</t:pagelink>
   
        </p>


</html>