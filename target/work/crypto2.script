CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE CRYPTO2(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,SUBBYTES_TESTVALUE VARCHAR(255) NOT NULL,MIXCOLUMNS_TESTVALUE VARCHAR(255) NOT NULL,SHIFTROWS_TESTVALUE VARCHAR(255) NOT NULL,KEYEXPANSION_TESTVALUE VARCHAR(255) NOT NULL,ADDROUNDKEY_TESTVALUE VARCHAR(255) NOT NULL,METATRANSFORMATION_TESTVALUE VARCHAR(255) NOT NULL,USERID BIGINT NOT NULL)
CREATE MEMORY TABLE SOURCE(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,SOURCECODE VARCHAR(255) NOT NULL,USERID BIGINT NOT NULL)
CREATE MEMORY TABLE USER(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,USERNAME VARCHAR(255) NOT NULL,PASSWORD VARCHAR(255) NOT NULL,NAME VARCHAR(255) NOT NULL,EMAIL VARCHAR(255) NOT NULL)
ALTER TABLE CRYPTO2 ALTER COLUMN ID RESTART WITH 5
ALTER TABLE SOURCE ALTER COLUMN ID RESTART WITH 5
ALTER TABLE USER ALTER COLUMN ID RESTART WITH 2
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 10
SET SCHEMA PUBLIC
INSERT INTO CRYPTO2 VALUES(1,'193de3bea0f4e22b9ac68d2ae9f84808','d4bf5d30e0b452aeb84111f11e2798e5','d42711aee0bf98f1b8b45de51e415230','2b7e151628aed2a6abf7158809cf4f3c','046681e5e0cb199a48f8d37a2806264c','3243f6a8885a308d313198a2e0370734',1)
INSERT INTO CRYPTO2 VALUES(2,'00102030405060708090A0B0C0D0E0F0','6353E08C0960E104CD70B751BACAD0E7','63CAB7040953D051CD60E0E7BA70E18C','000102030405060708090a0b0c0d0e0f','5F72641557F5BC92F7BE3B291DB9F91A','00112233445566778899aabbccddeeff',1)
INSERT INTO CRYPTO2 VALUES(3,'00102030405060708090A0B0C0D0E0F0','6353E08C0960E104CD70B751BACAD0E7','63CAB7040953D051CD60E0E7BA70E18C','000102030405060708090a0b0c0d0e0f1011121314151617','5F72641557F5BC92F7BE3B291DB9F91A','00112233445566778899aabbccddeeff',1)
INSERT INTO CRYPTO2 VALUES(4,'00102030405060708090A0B0C0D0E0F0','6353E08C0960E104CD70B751BACAD0E7','63CAB7040953D051CD60E0E7BA70E18C','000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f','5F72641557F5BC92F7BE3B291DB9F91A','00112233445566778899aabbccddeeff',1)
INSERT INTO SOURCE VALUES(1,'// AES128 from FIPS197 pg.33-34\u000a// First try test vector no.1\u000a// (3243f6a8885a308d313198a2e0370734)\u000a// Then try to experiment.\u000akey_len = 128;\u000ainit_key = "2b7e151628aed2a6abf7158809cf4f3c";\u000akeyExpansion.KeyExpansion128();\u000aNb = 4;  //br.kolona //number of columns\u000aNr = 10; //br.rundi // number of rounds\u000aaddRoundKey.transform_state(0);\u000afor (runda = 1; runda <= Nr-1; runda++)\u000a{\u000a\u0009subBytes.transform_state();\u000a\u0009shiftRows.transform_state();\u000a\u0009mixColumns.transform_state();\u000a\u0009addRoundKey.transform_state(4*runda*Nb );\u000a\u0009runda2=runda;\u000a}\u000arunda2++;\u000asubBytes.transform_state();\u000a// Final round\u000ashiftRows.transform_state();\u000aaddRoundKey.transform_state( 4*runda2*Nb );',1)
INSERT INTO SOURCE VALUES(2,'// AES128 from FIPS197 pg.35-36\u000a// First try test vector no.2\u000a// (3243f6a8885a308d313198a2e0370734)\u000a// Then try to experiment.\u000akey_len = 128;\u000ainit_key = "000102030405060708090a0b0c0d0e0f";\u000akeyExpansion.KeyExpansion128();\u000aNb = 4;  //br.kolona //number of columns\u000aNr = 10; //br.rundi // number of rounds\u000aaddRoundKey.transform_state(0);\u000afor (runda = 1; runda <= Nr-1; runda++)\u000a{\u000a\u0009subBytes.transform_state();\u000a\u0009shiftRows.transform_state();\u000a\u0009mixColumns.transform_state();\u000a\u0009addRoundKey.transform_state(4*runda*Nb );\u000a\u0009runda2=runda;\u000a}\u000arunda2++;\u000asubBytes.transform_state();\u000a// Final round\u000ashiftRows.transform_state();\u000aaddRoundKey.transform_state( 4*runda2*Nb );',1)
INSERT INTO SOURCE VALUES(3,'// AES192 from FIPS197 pg.38-39\u000a// First, try test vector no.3\u000a// (00112233445566778899aabbccddeeff)\u000a// Then try to experiment.\u000akey_len = 192;\u000ainit_key = "000102030405060708090a0b0c0d0e0f1011121314151617";\u000akeyExpansion.KeyExpansion192();\u000aNb = 4;  //br.kolona //number of columns\u000aNr = 12; //br.rundi // number of rounds\u000aaddRoundKey.transform_state(0);\u000afor (runda = 1; runda <= Nr-1; runda++)\u000a{\u000a\u0009subBytes.transform_state();\u000a\u0009shiftRows.transform_state();\u000a\u0009mixColumns.transform_state();\u000a\u0009addRoundKey.transform_state(4*runda*Nb );\u000a\u0009runda2=runda;\u000a}\u000arunda2++;\u000asubBytes.transform_state();\u000a// Final round\u000ashiftRows.transform_state();\u000aaddRoundKey.transform_state( 4*runda2*Nb );',1)
INSERT INTO SOURCE VALUES(4,'// AES256 from FIPS197 pg.42\u000a// First, try test vector no.4\u000a// (00112233445566778899aabbccddeeff)\u000a// Then try to experiment.\u000akey_len = 256;\u000ainit_key = "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f";\u000akeyExpansion.KeyExpansion256();\u000aNb = 4;  //br.kolona //number of columns\u000aNr = 14; //br.rundi // number of rounds\u000aaddRoundKey.transform_state(0);\u000afor (runda = 1; runda <= Nr-1; runda++)\u000a{\u000a\u0009subBytes.transform_state();\u000a\u0009shiftRows.transform_state();\u000a\u0009mixColumns.transform_state();\u000a\u0009addRoundKey.transform_state(4*runda*Nb );\u000a\u0009runda2=runda;\u000a}\u000arunda2++;\u000asubBytes.transform_state();\u000a// Final round\u000ashiftRows.transform_state();\u000aaddRoundKey.transform_state( 4*runda2*Nb );',1)
INSERT INTO USER VALUES(1,'dboris','damjanovic','Boris Damjanovic','dboris65@gmail.com')
